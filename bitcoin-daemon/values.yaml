# Default values for bitcoin-daemon.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

name: bitcoin

api:
  tier: api
  image: "shapeshiftdao/unchained-bitcoin-api:latest"
  replicas: 1
  autoscaling: true
  limits:
    cpu: 500m
    memory: 500Mi
  requests:
    cpu: 250m
    memory: 250Mi
  env:
    - name: INDEXER_URL
      value: "http://bitcoin-svc.unchained.svc.cluster.local:8001"
    - name: INDEXER_WS_URL
      value: "ws://bitcoin-svc.unchained.svc.cluster.local:8001/websocket"
    - name: LOG_LEVEL
      value: "debug"
    - name: NETWORK
      value: "mainnet"
    - name: RPC_URL
      value: "http://user:password@bitcoin-svc.unchained.svc.cluster.local:8332"


deployment:
  replicaCount: 1

  net: mainnet

  image:
    name: ghcr.io/arkeonetwork/helm-charts
    tag: "bitcoin-daemon-26.2"
    hash: "da4af564592e1f31ecd3efe65a063222849e4a7215a15b50a06146150c11fe45"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  persistence:
    enabled: true
    size:
      stagenet: 1000Gi
      mainnet: 1000Gi
    accessMode: ReadWriteOnce
    # storageClass: "-"

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name:

  podSecurityContext:
    fsGroup: 1000

  securityContext:
    {}

service:
  type: ClusterIP
  port:
    mainnet:
      p2p: 8333
      rpc: 8332
    testnet:
      p2p: 18333
      rpc: 18332
    stagenet:
      p2p: 8333
      rpc: 8332
    regtest:
      p2p: 18444
      rpc: 18443

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # cert-manager.io/cluster-issuer: letsencrypt-production
  hosts: []
    # - host: midgard.example.com
    #   paths:
    #   - path: /
    #     backend:
    #       serviceName: gateway
    #       servicePort: midgard
  tls: []
    # - secretName: midgard-tls
    #   hosts:
    #     - midgard.example.com

resources:
  limits:
    # cpu: 1
    memory: 5Gi
  requests:
    cpu: 1
    memory: 5Gi

nodeSelector: {}

tolerations: []

affinity: {}

global: {}