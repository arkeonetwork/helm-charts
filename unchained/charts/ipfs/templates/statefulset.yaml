---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}-sts
  namespace: {{ .Release.Name }}
  labels: 
    {{- include "unchained.statefulsetLabels" . | nindent 4 }}
spec:
  serviceName: {{ .Chart.Name }}-svc
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:   
      {{- include "unchained.statefulsetLabels" . | nindent 6 }}
  podManagementPolicy: 'Parallel'
  updateStrategy:
    type: 'RollingUpdate'
  template:
    metadata:
      namespace: {{ .Release.Name }}
      labels:
        {{- include "unchained.statefulsetLabels" . | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: 600
      initContainers:
      - name: "configure-ipfs"
        image: "ipfs/go-ipfs:latest"
        command: 
        - 'sh'
        - '/custom/configure-ipfs.sh'
        volumeMounts:
        - name: "ipfs-storage"
          mountPath: "/data/ipfs"
        - name: "configure-scripts"
          mountPath: "/custom"
      containers: 
      - name: {{ Chart.name }}-ipfs
        image: {{ .Values.image.ipfs }}
        {{- with .Values.env.ipfs }}
        env: 
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.ports.ipfs }}
        ports: 
          {{- toYaml . | nindent 10 }}
        {{- end }}
        resources:
          {{- with .Values.limits.ipfs }}
          limits:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.requests.ipfs }}
          requests:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        command: {{- toYaml .command | nindent 10 }} 
        livenessProbe:
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 10
          tcpSocket:
            port: 'swarm'
        volumeMounts:
        - name: {{ $.Chart.Name }}-{{ .name }}-data
          mountPath: {{ default "/data" .dataDir }}
        - name: {{ $.Values.name }}
          mountPath: '/readiness.sh'
          subPath: {{ .name }}-readiness.sh
        - name: {{ $.Values.name }}
          mountPath: '/startup.sh'
          subPath: {{ .name }}-startup.sh
        - name: {{ $.Values.name }}
          mountPath: '/liveness.sh'
          subPath: {{ .name }}-liveness.sh
        {{- if eq .name "daemon" }}
        - name: {{ $.Values.name }}
          mountPath: '/init.sh'
          subPath: {{ .name }}-init.sh
        {{- else if ne .name "indexer" }}
        - name: {{ $.Values.name }}
          mountPath: '/jwt.hex'
          subPath: 'jwt.hex'
        {{- else }}
        - name: {{ $.Values.name }}
          mountPath: '/indexer-config.json'
          subPath: 'indexer-config.json'
        {{- end }}
      {{- end }}
      volumes:
        - name: {{ .Values.name }}
          configMap:
            name: {{ .Chart.Name }}-scripts
            defaultMode: 0775
  volumeClaimTemplates:
  {{- range .Values.statefulset.containers }}
  - metadata:
      name: {{ $.Chart.Name }}-{{ .name }}-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ $.Values.global.storageClassName }}
      resources:
        requests:
          storage: {{ .storage_size }}
  {{- end }}