---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}-sts
  namespace: {{ .Release.Name }}
  labels: 
    {{- include "unchained.statefulsetLabels" . | nindent 4 }}
spec:
  serviceName: {{ .Chart.Name }}-svc
  replicas: {{ .Values.statefulset.replicas }}
  selector:
    matchLabels:   
      {{- include "unchained.statefulsetLabels" . | nindent 6 }}
  podManagementPolicy: 'Parallel'
  updateStrategy:
    type: 'RollingUpdate'
  template:
    metadata:
      namespace: {{ .Release.Name }}
      labels:
        {{- include "unchained.statefulsetLabels" . | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: 600
      containers:
      {{- range .Values.statefulset.containers }}
      - name: {{ .name }}
        image: {{ .image }}
        command:
        - '/init.sh'
        {{- with .env }}
        env: 
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .ports }}
        ports: 
          {{- toYaml . | nindent 10 }}
        {{- end }}
        resources:
        {{- with .limits }}
        limits:
          {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with .requests }}
        requests:
          {{- toYaml . | nindent 12 }}
        {{- end }}
        livenessProbe:
          timeoutSeconds: 10
          {{- if eq .name "daemon" }}
          httpGet:
            path: /status
            port: 27147
          {{- else if eq .name "timescaledb" }}
          exec:
            command:
            - 'pg_isready'
            - '-U'
            - '$(POSTGRES_USER)'
          {{- else if eq .name "indexer" }}
          tcpSocket:
            port: 8080
          {{- end }}
        startupProbe:
          failureThreshold: 30
          timeoutSeconds: 10
          {{- if eq .name "daemon" }}
          httpGet:
            path: /status
            port: 27147
          {{- else if eq .name "timescaledb" }}
          exec:
            command:
            - 'pg_isready'
            - '-U'
            - '$(POSTGRES_USER)'
          {{- else if eq .name "indexer" }}
          tcpSocket:
            port: 8080
          {{- end }}
        readinessProbe:
          timeoutSeconds: 10
          {{- if eq .name "daemon" }}
          httpGet:
            path: /status
            port: 27147
          {{- else }}
          exec:
            {{- if eq .name "timescaledb" }}
            command:
            - 'pg_isready'
            - '-U'
            - '$(POSTGRES_USER)'
            {{- else }}
            command: 
            - /bin/sh
            - -c
            - "wget -q -O - -T 20 localhost:8080/v2/health | grep '\"inSync\": true'"
            {{- end }}
          {{- end }}
        volumeMounts:
        - name: {{ $.Chart.Name }}-{{ .name }}-data
          mountPath: {{ default "/data" .dataDir }}
        - name: {{ $.Values.name }}
          mountPath: '/init.sh'
          subPath: {{ .name }}-init.sh
        - name: {{ $.Values.name }}
          mountPath: '/readiness.sh'
          subPath: {{ .name }}-readiness.sh
        - name: {{ $.Values.name }}
          mountPath: '/config.json'
          subPath: 'indexer-config.json'
        - name: dshm
          mountPath: '/dev/shm'
        {{- if eq .name "indexer" }}
        - name: {{ $.Values.name }}
          mountPath: /resources/hashes/thorchain
          subPath: blockstore-hashes
        {{- end }}
    {{- end }}
      volumes:
        - name: {{ .Values.name }}
          configMap:
            name: {{ .Chart.Name }}-scripts
            defaultMode: 0775
        - name: 'dshm'
          emptyDir: 
            medium: 'Memory'
            sizeLimit: 1Gi
  volumeClaimTemplates:
  {{- range .Values.statefulset.containers }}
  - metadata:
      name: {{ $.Chart.Name }}-{{ .name }}-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ $.Values.global.storageClassName }}
      resources:
        requests:
          storage: {{ .storage_size }}
  {{- end }}