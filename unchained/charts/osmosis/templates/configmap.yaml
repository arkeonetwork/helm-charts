apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "osmosis-daemon.fullname" . }}-scripts
data:
  probe.sh: |
    #!/bin/sh

    set -euo pipefail

    FILE=/root/.osmosisd/.probe_last_height
    ENDPOINT=localhost:$OSMOSIS_DAEMON_SERVICE_PORT/status

    STATUS=$(curl -s --fail -m 20 "$ENDPOINT") || exit 1
    if [ ! -f "$FILE" ]; then
      echo "$STATUS" | jq -r ".result.sync_info.latest_block_height" >$FILE
      exit 1
    fi

    OLD=$(cat $FILE)
    echo "$STATUS" | jq -r ".result.sync_info.latest_block_height" > $FILE
    CURRENT=$(cat $FILE)
    [ "$OLD" == "$CURRENT" ] && exit 1 || exit 0

  init.sh: |
    #!/bin/sh

    set -euo pipefail

    mkdir -p /root/.osmosisd/config

    # pull genesis if it does not exist
    if [ ! -f "/root/.osmosisd/config/genesis.json" ]; then
      cd /root/.osmosisd/config
      wget https://osmosis.fra1.digitaloceanspaces.com/osmosis-1/genesis.json
    fi

    # pull the latest address book
    if [ -f /root/.osmosisd/config/addrbook.json ]; then
      mv /root/.osmosisd/config/addrbook.json /root/.osmosisd/config/addrbook.json.bak
      wget -O /root/.osmosisd/config/addrbook.json https://quicksync.io/addrbook.osmosis.json || mv addrbook.json.bak addrbook.json
    else
      wget -O /root/.osmosisd/config/addrbook.json https://quicksync.io/addrbook.osmosis.json
    fi

    # skip snapshot pull and cleanup tar if we already have a data directory
    if [ -d "/root/.osmosisd/data" ]; then
      echo "cleaning snapshot data..."
      rm -f /root/.osmosisd/*.lz4
      exit 0
    fi

    cd /root/.osmosisd
    apk add aria2 curl jq lz4

    # fetch snapshot url
    URL=`curl -L https://quicksync.io/osmosis.json | jq -r '.[] |select(.file=="osmosis-1-pruned")|.url'`

    # clean stale snapshots
    if ls /root/.osmosisd/osmosis-1-* >/dev/null 2>&1; then
      ls /root/.osmosisd/osmosis-1-* | while read line; do
        if [ "$(basename $URL)" = "$(basename $line)" ] || [ "$(basename $URL).aria2" = "$(basename $line)" ]; then
          echo "leaving snapshot to resume: $line"
        else
          echo "cleaning stale snapshot: $line"
          rm $line
        fi
      done
    fi

    # pull snapshot
    aria2c -c -x5 $URL
    lz4 -d `basename $URL` | tar xf -

    # cleanup
    rm /root/.osmosisd/*.lz4
